{"ast":null,"code":"import { CREATE_COMPOUND, RETRIEVE_COMPOUND, RETRIEVE_COMPOUNDS, UPDATE_COMPOUND, DELETE_COMPOUND, DELETE_ALL_COMPOUNDS } from \"../Constant/compoundType\";\nconst initialState = [];\n\nfunction compoundReducer() {\n  let compounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CREATE_COMPOUND:\n      return [...compounds, payload];\n\n    case RETRIEVE_COMPOUND:\n      return payload;\n\n    case RETRIEVE_COMPOUNDS:\n      return payload;\n\n    case UPDATE_COMPOUND:\n      return compounds.map(compound => {\n        if (compound.id === payload.id) {\n          return { ...compound,\n            ...payload\n          };\n        } else {\n          return compound;\n        }\n      });\n\n    case DELETE_COMPOUND:\n      return compounds.filter(_ref => {\n        let {\n          id\n        } = _ref;\n        return id !== payload.id;\n      });\n\n    case DELETE_ALL_COMPOUNDS:\n      return [];\n\n    default:\n      return compounds;\n  }\n}\n\n;\nexport default compoundReducer;","map":{"version":3,"names":["CREATE_COMPOUND","RETRIEVE_COMPOUND","RETRIEVE_COMPOUNDS","UPDATE_COMPOUND","DELETE_COMPOUND","DELETE_ALL_COMPOUNDS","initialState","compoundReducer","compounds","action","type","payload","map","compound","id","filter"],"sources":["/Users/nathan/Documents/2022Summer/ndsu/beta/src/Compounds/Reducer/compoundReducer.js"],"sourcesContent":["import {\n\tCREATE_COMPOUND,\n\tRETRIEVE_COMPOUND,\n    RETRIEVE_COMPOUNDS,\n\tUPDATE_COMPOUND,\n\tDELETE_COMPOUND,\n\tDELETE_ALL_COMPOUNDS,\n} from \"../Constant/compoundType\";\n\nconst initialState = [];\n\nfunction compoundReducer(compounds = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase CREATE_COMPOUND:\n\t\t\treturn [...compounds, payload];\n\n\t\tcase RETRIEVE_COMPOUND:\n\t\t\treturn payload;\n\n        case RETRIEVE_COMPOUNDS:\n            return payload;\n\n\t\tcase UPDATE_COMPOUND:\n\t\t\treturn compounds.map((compound) => {\n\t\t\t\tif(compound.id === payload.id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...compound,\n\t\t\t\t\t\t...payload,\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn compound;\n\t\t\t\t}\n\t\t\t});\n\n\t\tcase DELETE_COMPOUND:\n\t\t\treturn compounds.filter(({id}) => id !== payload.id);\n\n\t\tcase DELETE_ALL_COMPOUNDS:\n\t\t\treturn [];\n\n\t\tdefault:\n\t\t\treturn compounds;\n\t}\n};\n\nexport default compoundReducer;"],"mappings":"AAAA,SACCA,eADD,EAECC,iBAFD,EAGIC,kBAHJ,EAICC,eAJD,EAKCC,eALD,EAMCC,oBAND,QAOO,0BAPP;AASA,MAAMC,YAAY,GAAG,EAArB;;AAEA,SAASC,eAAT,GAA2D;EAAA,IAAlCC,SAAkC,uEAAtBF,YAAsB;EAAA,IAARG,MAAQ;EAC1D,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBF,MAA1B;;EAEA,QAAQC,IAAR;IACC,KAAKV,eAAL;MACC,OAAO,CAAC,GAAGQ,SAAJ,EAAeG,OAAf,CAAP;;IAED,KAAKV,iBAAL;MACC,OAAOU,OAAP;;IAEK,KAAKT,kBAAL;MACI,OAAOS,OAAP;;IAEV,KAAKR,eAAL;MACC,OAAOK,SAAS,CAACI,GAAV,CAAeC,QAAD,IAAc;QAClC,IAAGA,QAAQ,CAACC,EAAT,KAAgBH,OAAO,CAACG,EAA3B,EAA+B;UAC9B,OAAO,EACN,GAAGD,QADG;YAEN,GAAGF;UAFG,CAAP;QAIA,CALD,MAKO;UACN,OAAOE,QAAP;QACA;MACD,CATM,CAAP;;IAWD,KAAKT,eAAL;MACC,OAAOI,SAAS,CAACO,MAAV,CAAiB;QAAA,IAAC;UAACD;QAAD,CAAD;QAAA,OAAUA,EAAE,KAAKH,OAAO,CAACG,EAAzB;MAAA,CAAjB,CAAP;;IAED,KAAKT,oBAAL;MACC,OAAO,EAAP;;IAED;MACC,OAAOG,SAAP;EA7BF;AA+BA;;AAAA;AAED,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}