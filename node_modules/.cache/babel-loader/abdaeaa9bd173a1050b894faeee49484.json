{"ast":null,"code":"import { CREATE_COMPOUND, RETRIEVE_COMPOUND, RETRIEVE_COMPOUNDS, UPDATE_COMPOUND, DELETE_COMPOUND, DELETE_ALL_COMPOUNDS } from \"../Constant/compoundType\";\nimport CompoundDataService from \"../Common/commonCompound\";\nexport const createCompound = (comp_index, comp_material, comp_notation, comp_mol2, comp_components, comp_properties) => async dispatch => {\n  try {\n    const res = await CompoundDataService.create({\n      comp_index,\n      comp_material,\n      comp_notation,\n      comp_mol2,\n      comp_components,\n      comp_properties\n    });\n    dispatch({\n      type: CREATE_COMPOUND,\n      payload: res.data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const retrieveCompound = comp_id => async dispatch => {\n  try {\n    const res = CompoundDataService.get(comp_id);\n    dispatch({\n      type: RETRIEVE_COMPOUND,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const retrieveCompounds = () => async dispatch => {\n  try {\n    const res = await CompoundDataService.getAll();\n    dispatch({\n      type: RETRIEVE_COMPOUNDS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateCompound = (comp_id, data) => async dispatch => {\n  try {\n    const res = await CompoundDataService.update(comp_id, data);\n    dispatch({\n      type: UPDATE_COMPOUND,\n      payload: data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const deleteCompound = comp_id => async dispatch => {\n  try {\n    await CompoundDataService.deleteCompound(comp_id);\n    dispatch({\n      type: DELETE_COMPOUND,\n      payload: {\n        comp_id\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteAllCompounds = () => async dispatch => {\n  try {\n    const res = await CompoundDataService.deleteAllCompounds();\n    dispatch({\n      type: DELETE_ALL_COMPOUNDS,\n      payload: res.data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const findCompoundByTitle = title => async dispatch => {\n  try {\n    const res = await CompoundDataService.findCompoundByTitle(title);\n    dispatch({\n      type: RETRIEVE_COMPOUND,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"names":["CREATE_COMPOUND","RETRIEVE_COMPOUND","RETRIEVE_COMPOUNDS","UPDATE_COMPOUND","DELETE_COMPOUND","DELETE_ALL_COMPOUNDS","CompoundDataService","createCompound","comp_index","comp_material","comp_notation","comp_mol2","comp_components","comp_properties","dispatch","res","create","type","payload","data","Promise","resolve","err","reject","retrieveCompound","comp_id","get","console","log","retrieveCompounds","getAll","updateCompound","update","deleteCompound","deleteAllCompounds","findCompoundByTitle","title"],"sources":["/Users/nathan/Documents/2022Summer/ndsu/beta/src/Compounds/Action/compoundAction.js"],"sourcesContent":["import {\n\tCREATE_COMPOUND,\n\tRETRIEVE_COMPOUND,\n    RETRIEVE_COMPOUNDS,\n\tUPDATE_COMPOUND,\n\tDELETE_COMPOUND,\n\tDELETE_ALL_COMPOUNDS\n} from \"../Constant/compoundType\";\nimport CompoundDataService from \"../Common/commonCompound\";\n\nexport const createCompound = (comp_index, comp_material, comp_notation, comp_mol2, comp_components, comp_properties) => async(dispatch) => {\n    try {\n\t\tconst res = await CompoundDataService.create({\n\t\t\tcomp_index,\n\t\t\tcomp_material,\n\t\t\tcomp_notation,\n\t\t\tcomp_mol2,\n\t\t\tcomp_components,\n\t\t\tcomp_properties,\n\t\t});\n\n\t\tdispatch({\n\t\t\ttype: CREATE_COMPOUND,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\treturn Promise.resolve(res.data);\n\t} catch (err) {\n\t\treturn Promise.reject(err);\n\t}\n}\n\nexport const retrieveCompound = (comp_id) => async(dispatch) =>{\n    try{\n        const res = CompoundDataService.get(comp_id);\n        dispatch({\n            type:RETRIEVE_COMPOUND,\n            payload: res.data,\n        })\n    } catch (err){\n        console.log(err);\n    }\n}\n\nexport const retrieveCompounds = () => async (dispatch) => {\n\ttry{\n\t\tconst res = await CompoundDataService.getAll();\n\t\tdispatch({\n\t\t\ttype: RETRIEVE_COMPOUNDS,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n};\n\nexport const updateCompound = (comp_id, data) => async (dispatch) => {\n\ttry {\n\t\tconst res = await CompoundDataService.update(comp_id, data);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_COMPOUND,\n\t\t\tpayload: data,\n\t\t});\n\n\t\treturn Promise.resolve(res.data);\n\t} catch (err) {\n\t\treturn Promise.reject(err)\n\t}\n};\n\nexport const deleteCompound = (comp_id) => async (dispatch) => {\n\ttry {\n\t\tawait CompoundDataService.deleteCompound(comp_id);\n\n\t\tdispatch({\n\t\t\ttype: DELETE_COMPOUND,\n\t\t\tpayload: { comp_id },\n\t\t});\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n};\n\nexport const deleteAllCompounds = () => async (dispatch) => {\n\ttry {\n\t\tconst res = await CompoundDataService.deleteAllCompounds();\n\n\t\tdispatch({\n\t\t\ttype: DELETE_ALL_COMPOUNDS,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\treturn Promise.resolve(res.data);\n\t} catch (err) {\n\t\treturn Promise.reject(err);\n\t}\n};\n\nexport const findCompoundByTitle = (title) => async (dispatch) => {\n\ttry {\n\t\tconst res = await CompoundDataService.findCompoundByTitle(title);\n\t\tdispatch({\n\t\t\ttype: RETRIEVE_COMPOUND,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}